% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/query.R
\docType{methods}
\name{query}
\alias{query}
\alias{query,BioThings-method}
\alias{query,missing-method}
\alias{queryMany}
\alias{queryMany,BioThings-method}
\alias{queryMany,missing-method}
\title{query}
\usage{
query(q, client, ..., fetch_all = FALSE, return.as = c("records",
  "data.frame", "text"), biothings)

\S4method{query}{BioThings}(q, client, ..., fetch_all = FALSE,
  return.as = c("records", "data.frame", "text"), biothings)

\S4method{query}{missing}(q, client, ..., fetch_all = FALSE,
  return.as = c("records", "data.frame", "text"), biothings)

queryMany(qterms, client, scopes = NULL, ..., return.as = c("records",
  "data.frame", "text"), biothings)

\S4method{queryMany}{BioThings}(qterms, client, scopes = NULL, ...,
  return.as = c("records", "data.frame", "text"), biothings)

\S4method{queryMany}{missing}(qterms, client, scopes = NULL, ...,
  return.as = c("records", "data.frame", "text"), biothings)
}
\arguments{
\item{q}{A query string}

\item{client}{A BioThings client name}

\item{...}{Any parameters to pass to API}

\item{fetch_all}{This returns a list of _all_ results for a query, regardless of \code{return.as}. See the API documentation.}

\item{return.as}{Type of return value}

\item{biothings}{An S4 class BioThings object}

\item{qterms}{A vector of query strings}

\item{scopes}{One or more fields (separated by comma) as the search "scopes"}
}
\value{
Returns the API result as the provided return.as type
}
\description{
Retrieve results from the query endpoint of BioThings APIs
}
\examples{
query(q="NM_013993", client = "gene")
}
