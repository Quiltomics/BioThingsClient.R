% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/query.R
\docType{methods}
\name{btQuery}
\alias{btQuery}
\alias{btQuery,BioThings-method}
\alias{btQuery,missing-method}
\alias{btQuery,character-method}
\title{btQuery}
\usage{
btQuery(biothings, q, ..., fetch_all = FALSE, scopes,
  return.as = c("records", "data.frame", "text"))

\S4method{btQuery}{BioThings}(biothings, q, ..., fetch_all = FALSE, scopes,
  return.as = c("records", "data.frame", "text"))

\S4method{btQuery}{missing}(biothings, q, ..., fetch_all = FALSE, scopes,
  return.as = c("records", "data.frame", "text"))

\S4method{btQuery}{character}(biothings, q, ..., fetch_all = FALSE, scopes,
  return.as = c("records", "data.frame", "text"))
}
\arguments{
\item{biothings}{An S4 class BioThings object}

\item{q}{A query string}

\item{...}{Any parameters to pass to API}

\item{fetch_all}{This returns a list of _all_ results for a query,
regardless of \code{return.as}. See the API documentation.}

\item{scopes}{One or more fields (separated by comma) as the search "scopes"}

\item{return.as}{Type of return value}
}
\value{
Returns the API result as the provided return.as type
}
\description{
Retrieve results from the query endpoint of BioThings APIs
}
\examples{
btQuery("gene", q = "NM_013993")
gene_client <- BioThings("gene")
btQuery(gene_client, "NM_013993")
}
